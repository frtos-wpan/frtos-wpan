atben on STM32-E407 (Contiki) design verification
=================================================

SCLK timing (Contiki, 48 MHz system clock, bit-banging)
-------------------------------------------------------

Software state: frtos-wpan/contiki-outoftree commit
88a7237e9fb15055c70886b5c3eb6cd1b333133c

The data sheet specifies only the maximum SCLK frequency (12.4.2 =
7.5 MHz) but not the duty cycle or minimum SCLK high or low times.

We therefore assume that a period must not be below 1/fSCLK and
that neither high or low must be shorter than 1/(2*fSCLK).

This measurement was taken with the system clock set to 48 MHz:

sys-48MHz-sclk.png

The period easily meets the constraints with 458 ns > 133 ns
The high time also meets the constraints with 82 ns > 67 ns


SLP_TR timing (Contiki, 48 MHz system clock, bit-banging)
---------------------------------------------------------

Software state: frtos-wpan/contiki-outoftree commit
88a7237e9fb15055c70886b5c3eb6cd1b333133c

contiki with the following correction to rf230bb.c:

diff --git a/cpu/avr/radio/rf230bb/rf230bb.c b/cpu/avr/radio/rf230bb/rf230bb.c
index 65f9616..195e9a9 100644
--- a/cpu/avr/radio/rf230bb/rf230bb.c
+++ b/cpu/avr/radio/rf230bb/rf230bb.c
@@ -965,9 +965,9 @@ rf230_transmit(unsigned short payload_len)
   HAL_ENTER_CRITICAL_REGION();
 
   /* Toggle the SLP_TR pin to initiate the frame transmission */
+  hal_frame_write(buffer, total_len);
   hal_set_slptr_high();
   hal_set_slptr_low();
-  hal_frame_write(buffer, total_len);
 
   HAL_LEAVE_CRITICAL_REGION();
   PRINTF("rf230_transmit: %d\n", (int)total_len);

We're mainly interested in the SLP_TR timing. The data sheet
specifies a minimum duration for the SLP_TR pulse (12.4.9) of
t7 = 62.5 ns and a maximum duration of "TX frame length + 16 us".
We shall interpret the latter simply as 16 us.

It does not specify a minimum time between nSEL of a buffer write
going high and the rising edge of the SLP_TR pulse to start
sending.

Most interface-level delays the transceiver requires are in the
order of a few hundred nanoseconds, so we shall assume that 0.5 us
between SCLK and SLP_TR should be sufficient.

This measurement was taken with the system clock set to 48 MHz:

sys-48MHz-nsel-slp_tr.png

Channel 1 (yellow) shows SLP_TR, channel 2 (blue) shows nSEL.

The SLP_TR pulse width meets the constraints with 250 ns > 65 ns
and is much shorter than 16 us maximum.

The time between nSEL and SLP_TR is about 450 ns, which seems
borderline, given the assumption above.

The time between the end of the previous command (the write of
PLL_ON, nSEL rising) and the rising edge of SLP_TR is about 130 us.
The data sheet (table 7-1, tTR4) specifies a typical PLL setting
time of 110 us, so this should be safe.


SCLK timing (FreeRTOS-Contiki hybrid, 168 MHz system clock, bit-banging)
------------------------------------------------------------------------

Software state: frtos-wpan/freertos commit
62be01b7b613c7849950db2ff3f9dc618e72ee85

SCLK measurement:

sys-168MHz-sclk.png

The period meets the constraints with 182 ns > 133 ns
The high time does not meet the constraints of 50 ns > 67 ns

As of frtos-wpan/freertos commit
3af3d6f31da5332ba6074a6d0541893760fc5537
we therefore stretch the SCLK high phase by writing the bit three
times. Measurement:

sys-168MHz-sclk-3x.png

The period easily meets the constraints with 280 ns > 133 ns
The high time also meets the constraints with 140 ns > 67 ns


SLP_TR timing (FreeRTOS-Contiki hybrid, 168 MHz system clock, bit-banging)
--------------------------------------------------------------------------

Software state: frtos-wpan/freertos commit
3af3d6f31da5332ba6074a6d0541893760fc5537

Channel 1 (yellow) is  SLP_TR), channel 2 (blue) is nSEL:

sys-168MHz-nsel-slp_tr.png

The SLP_TR pulse width meets the constraints with
65 ns < 100 ns < 16 us.

The time between nSEL and SLP_TR is about 300 ns, which still
doesn't seem to cause any problems.
